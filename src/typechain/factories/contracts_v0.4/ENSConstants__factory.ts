/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ENSConstants,
  ENSConstantsInterface,
} from "../../contracts_v0.4/ENSConstants";

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "PUBLIC_RESOLVER_NODE",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "ETH_TLD_LABEL",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "ENS_ROOT",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "PUBLIC_RESOLVER_LABEL",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "ETH_TLD_NODE",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6060604052341561000f57600080fd5b61025d8061001e6000396000f30060606040526004361061006c5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633f82e2c681146100715780639b227a9714610096578063a9bf1c9f146100a9578063c84b1ce7146100bc578063fdee38a9146100cf575b600080fd5b341561007c57600080fd5b6100846100e2565b60405190815260200160405180910390f35b34156100a157600080fd5b610084610177565b34156100b457600080fd5b6100846101ab565b34156100c757600080fd5b6100846101b0565b34156100da57600080fd5b6100846101e4565b60006040517f65746800000000000000000000000000000000000000000000000000000000008152600301604051809103902060405191825260208201526040908101905180910390206040517f7265736f6c76657200000000000000000000000000000000000000000000000081526008016040518091039020604051918252602082015260409081019051809103902081565b6040517f65746800000000000000000000000000000000000000000000000000000000008152600301604051809103902081565b600081565b6040517f7265736f6c7665720000000000000000000000000000000000000000000000008152600801604051809103902081565b60006040517f6574680000000000000000000000000000000000000000000000000000000000815260030160405180910390206040519182526020820152604090810190518091039020815600a165627a7a72305820f98ce0a7fa7fdd8fbfb03b5235f70fa70fdc967d9e35da633040e5e29d141b9c0029";

type ENSConstantsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ENSConstantsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ENSConstants__factory extends ContractFactory {
  constructor(...args: ENSConstantsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ENSConstants> {
    return super.deploy(overrides || {}) as Promise<ENSConstants>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ENSConstants {
    return super.attach(address) as ENSConstants;
  }
  override connect(signer: Signer): ENSConstants__factory {
    return super.connect(signer) as ENSConstants__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ENSConstantsInterface {
    return new utils.Interface(_abi) as ENSConstantsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ENSConstants {
    return new Contract(address, _abi, signerOrProvider) as ENSConstants;
  }
}
